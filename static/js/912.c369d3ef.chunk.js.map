{"version":3,"file":"static/js/912.c369d3ef.chunk.js","mappings":"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","sources":["Servises/fetchMovies.js","components/Loader.js","Styles/MovieSearchResult.styled.jsx","components/MoviesSearch.js","Styles/MovieSearch.styled.jsx","components/Pages/MoviesSearch.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = '7f79b9469f05b818a5fcd6a2e700e54b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n//  Популярные фильмы------------\n\nexport async function fetchMovies() {\n  const response = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API}`)\n    .then(result => result.data.results);\n  return response;\n}\n\n//   Один фильм ------------\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Жанры ------------------\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n// Ревью --------------------\n\nexport async function fetchMovieReview(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Поиск ------------------\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US`\n    )\n    .then(result => result.data);\n  return response;\n}\n","import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <Audio\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"green\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle\n        wrapperClass\n      />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const SearchResultList = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n  dicplay: block;\n  text-align: center;\n`;\n\nexport const List = styled.li``;\n\nexport const ListItem = styled(NavLink)`\n  text-decoration: none;\n  color: gray;\n  font-family: sans-serif;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  SearchResultList,\n  ListItem,\n  List,\n} from '../Styles/MovieSearchResult.styled';\n\nexport const MoviesList = ({ movies, titlePage }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {titlePage && <h1>{titlePage}</h1>}\n\n      <SearchResultList>\n        {movies.map(({ id, title, name }) => (\n          <List key={id}>\n            <ListItem to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </ListItem>\n          </List>\n        ))}\n      </SearchResultList>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: block;\n  text-align: center;\n  margin-top: 50px;\n`;\n\nexport const Input = styled.input`\n  text-align: center;\n  width: 400px;\n  height: 30px;\n  margin-right: 30px;\n  border-radius: 5px;\n  font-size: 20px;\n  color: gray;\n`;\n\nexport const Button = styled.button`\n  height: 35px;\n  width: 100px;\n  border-radius: 5px;\n  background-color: light-gray;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieByQuery } from 'Servises/fetchMovies';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from '../MoviesSearch';\nimport { Loader } from 'components/Loader';\nimport { Input, Form, Button } from '../../Styles/MovieSearch.styled';\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovie] = useState(null);\n  const [totalRezultMovie, setTotalRezMovie] = useState(null);\n  const [status, setStatus] = useState(false);\n  const [inputSearch, setInputSearch] = useState(query);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setMovie(null);\n    setTotalRezMovie(null);\n    setStatus(true);\n\n    fetchMovieByQuery(query)\n      .then(data => {\n        setMovie(data.results);\n        setTotalRezMovie(data.total_results);\n        setStatus(false);\n      })\n      .catch(console.log);\n  }, [query]);\n\n  const handleInputChange = e => {\n    setInputSearch(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n\n    setSearchParams({ query: queryNormalized });\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={inputSearch}\n          onChange={handleInputChange}\n          placeholder=\"Enter movie name\"\n        />\n\n        <Button type=\"submit\">Search</Button>\n      </Form>\n\n      {movies && <MoviesList movies={movies} />}\n      {status && <Loader />}\n      {totalRezultMovie === 0 && <div>Not found movies</div>}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n"],"names":["API","BASE_URL","fetchMovies","axios","then","result","data","results","response","fetchMovieById","movieId","fetchMovieCast","fetchMovieReview","fetchMovieByQuery","query","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","SearchResultList","styled","List","ListItem","NavLink","MoviesList","movies","titlePage","location","useLocation","map","id","title","name","to","state","from","Form","Input","Button","useSearchParams","searchParams","setSearchParams","get","useState","setMovie","totalRezultMovie","setTotalRezMovie","status","setStatus","inputSearch","setInputSearch","useEffect","total_results","catch","console","log","onSubmit","e","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","onChange","currentTarget","placeholder"],"sourceRoot":""}