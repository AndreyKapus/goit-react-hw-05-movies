{"version":3,"file":"static/js/515.4083ae7f.chunk.js","mappings":"6SAEMA,EAAM,mCACNC,EAAW,+BAIV,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,GAAAA,IAAA,UACbF,EADa,uCAC0BD,IAC9CI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IAHT,cACCC,EADD,yBAIEA,GAJF,kEASA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,uFACkBP,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKS,EADL,oBACwBV,EADxB,oBAEpBI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAHT,cACCE,EADD,yBAIEA,GAJF,kEASA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BD,GAA9B,uFACkBP,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKS,EADL,4BACgCV,EADhC,oBAEpBI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAHT,cACCE,EADD,yBAIEA,GAJF,kEASA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAgCF,GAAhC,uFACkBP,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKS,EADL,4BACgCV,EADhC,oBAEpBI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAHT,cACCE,EADD,yBAIEA,GAJF,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBX,EAAAA,GAAAA,IAAA,UAEhBF,EAFgB,iCAEiBD,EAFjB,kBAE8Bc,EAF9B,oBAIpBV,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IALT,cACCE,EADD,yBAMEA,GANF,kE,qHCzCMO,E,OAAgBC,EAAAA,IAAH,2E,SC4C1B,EAzCa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,QAcR,OAZAW,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAeD,GACZN,MAAK,qBAAGkB,KACFC,KAAI,SAAAC,GAAK,MAAK,CACjBC,KAAMD,EAAMC,KACZC,UAAWF,EAAME,UACjBC,IAAKH,EAAMI,aAHC,GADV,IAOLxB,MAAK,SAAAyB,GAAQ,OAAIV,EAAaU,EAAjB,GACjB,GAAE,CAACnB,IAECQ,GAKH,yBACGA,IACC,SAACH,EAAD,UACGG,EAAUK,KAAI,gBAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,IAAKG,EAAzB,EAAyBA,GAAzB,OACb,4BACE,uBAAIL,KACJ,uBAAIC,IACHC,GACC,gBAAKI,IAAG,yCAAoCJ,GAAOK,IAAI,KAEvD,aANMF,EAAKL,EADF,QAPd,IAsBV,C","sources":["Servises/fetchMovies.js","Styles/Cast.styled.jsx","components/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = '7f79b9469f05b818a5fcd6a2e700e54b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n//  Популярные фильмы------------\n\nexport async function fetchMovies() {\n  const response = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API}`)\n    .then(result => result.data.results);\n  return response;\n}\n\n//   Один фильм ------------\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Жанры ------------------\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n// Ревью --------------------\n\nexport async function fetchMovieReview(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Поиск ------------------\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US`\n    )\n    .then(result => result.data);\n  return response;\n}\n","import styled from '@emotion/styled';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4em;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../Servises/fetchMovies';\nimport { CastContainer } from '../Styles/Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId)\n      .then(({ cast }) =>\n        cast.map(actor => ({\n          name: actor.name,\n          character: actor.character,\n          img: actor.profile_path,\n        }))\n      )\n      .then(castData => setMovieCast(castData));\n  }, [movieId]);\n\n  if (!movieCast) {\n    return null;\n  }\n\n  return (\n    <div>\n      {movieCast && (\n        <CastContainer>\n          {movieCast.map(({ name, character, img, id }) => (\n            <div key={id + name}>\n              <p>{name}</p>\n              <p>{character}</p>\n              {img ? (\n                <img src={`https://image.tmdb.org/t/p/w154${img}`} alt=\"\" />\n              ) : (\n                'no image'\n              )}\n            </div>\n          ))}\n        </CastContainer>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API","BASE_URL","fetchMovies","axios","then","result","data","results","response","fetchMovieById","movieId","fetchMovieCast","fetchMovieReview","fetchMovieByQuery","query","CastContainer","styled","useState","movieCast","setMovieCast","useParams","useEffect","cast","map","actor","name","character","img","profile_path","castData","id","src","alt"],"sourceRoot":""}