{"version":3,"file":"static/js/520.64ed8273.chunk.js","mappings":"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","sources":["Servises/fetchMovies.js","components/Loader.js","components/GoBackBtn.js","Styles/MovieDetails.jsx","components/Pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = '7f79b9469f05b818a5fcd6a2e700e54b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n//  Популярные фильмы------------\n\nexport async function fetchMovies() {\n  const response = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API}`)\n    .then(result => result.data.results);\n  return response;\n}\n\n//   Один фильм ------------\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Жанры ------------------\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n// Ревью --------------------\n\nexport async function fetchMovieReview(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Поиск ------------------\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US`\n    )\n    .then(result => result.data);\n  return response;\n}\n","import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <Audio\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"green\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle\n        wrapperClass\n      />\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const GoBackButton = ({ backLinkRef }) => {\n  return (\n    <div>\n      <NavLink to={backLinkRef}>Go back</NavLink>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  padding-left: 50px;\n  padding-right: 50px;\n`;\n\nexport const Img = styled.div`\n  margin-top: 50px;\n  margin-right: 30px;\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  margin-top: 50px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  margin-right: 20px;\n  color: gray;\n  font-size: 24px;\n`;\n\nexport const Genre = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const LinkList = styled.div`\n  margin-bottom: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'Servises/fetchMovies';\nimport { GoBackButton } from 'components/GoBackBtn';\nimport { Loader } from 'components/Loader';\nimport {\n  Container,\n  Img,\n  MovieDetailsContainer,\n  StyledLink,\n  Genre,\n  LinkList,\n} from '../../Styles/MovieDetails';\n\nexport const MovieDetails = () => {\n  const [aboutMovie, setAboutMovie] = useState(null);\n  const { movieId } = useParams();\n  const [status, setStatus] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = location.state?.from ?? '/';\n\n  // const movie = fetchMovieById(movieId);\n\n  useEffect(() => {\n    setStatus(true);\n    fetchMovieById(movieId).then(movie => {\n      setAboutMovie(movie);\n    });\n    setStatus(false);\n  }, [movieId]);\n\n  if (!aboutMovie) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <GoBackButton backLinkRef={backLinkRef} />\n      <Img>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${aboutMovie.poster_path}`}\n          alt=\"\"\n        />\n      </Img>\n      <MovieDetailsContainer>\n        <h2>\n          {aboutMovie.title} {aboutMovie.release_date.slice(0, 4)}\n        </h2>\n        <p>Vote average: {aboutMovie.vote_average}</p>\n        <h3>Overview</h3>\n        <p>{aboutMovie.overview}</p>\n        <Genre>\n          Genre: {aboutMovie.genres.map(({ name }) => name).join(' ')}\n        </Genre>\n        <LinkList>\n          <StyledLink to={`movies/${movieId}/reviews`}>Reviews</StyledLink>\n          <StyledLink to={`movies/${movieId}/cast`}>Cast</StyledLink>\n        </LinkList>\n        <Outlet />\n        {status && <Loader />}\n      </MovieDetailsContainer>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API","BASE_URL","fetchMovies","axios","then","result","data","results","response","fetchMovieById","movieId","fetchMovieCast","fetchMovieReview","fetchMovieByQuery","query","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","GoBackButton","backLinkRef","to","Container","styled","Img","MovieDetailsContainer","StyledLink","NavLink","Genre","LinkList","MovieDetails","useState","aboutMovie","setAboutMovie","useParams","status","setStatus","useLocation","state","from","useEffect","movie","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","name","join"],"sourceRoot":""}