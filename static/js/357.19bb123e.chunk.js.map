{"version":3,"file":"static/js/357.19bb123e.chunk.js","mappings":"6SAEMA,EAAM,mCACNC,EAAW,+BAIV,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,GAAAA,IAAA,UACbF,EADa,uCAC0BD,IAC9CI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IAHT,cACCC,EADD,yBAIEA,GAJF,kEASA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,uFACkBP,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKS,EADL,oBACwBV,EADxB,oBAEpBI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAHT,cACCE,EADD,yBAIEA,GAJF,kEASA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BD,GAA9B,uFACkBP,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKS,EADL,4BACgCV,EADhC,oBAEpBI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAHT,cACCE,EADD,yBAIEA,GAJF,kEASA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAgCF,GAAhC,uFACkBP,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKS,EADL,4BACgCV,EADhC,oBAEpBI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAHT,cACCE,EADD,yBAIEA,GAJF,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBX,EAAAA,GAAAA,IAAA,UAEhBF,EAFgB,iCAEiBD,EAFjB,kBAE8Bc,EAF9B,oBAIpBV,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IALT,cACCE,EADD,yBAMEA,GANF,kE,6ECCP,UAvCgB,WACd,OAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAeR,OAbAS,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAiBF,GACdN,MAAK,qBAAGG,QACCa,KAAI,SAAAf,GAAM,MAAK,CACrBgB,OAAQhB,EAAOgB,OACfC,QAASjB,EAAOiB,QAChBC,GAAIlB,EAAOkB,GAHK,GADd,IAOLnB,MAAK,SAAAoB,GAAS,OAAIP,EAAUO,EAAd,GAClB,GAAE,CAACd,IACJe,QAAQC,KAAId,EAAAA,EAAAA,IAAiBF,IAExBM,GAKH,yBACGA,EAAOW,OAAS,GACf,yBACGX,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,4BACE,uBAAIF,KACJ,uBAAIC,MAFIC,EADA,OAQd,oDAfG,IAmBV,C","sources":["Servises/fetchMovies.js","components/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = '7f79b9469f05b818a5fcd6a2e700e54b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n//  Популярные фильмы------------\n\nexport async function fetchMovies() {\n  const response = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API}`)\n    .then(result => result.data.results);\n  return response;\n}\n\n//   Один фильм ------------\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Жанры ------------------\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n// Ревью --------------------\n\nexport async function fetchMovieReview(movieId) {\n  const response = await axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API}&language=en-US`)\n    .then(result => result.data);\n  return response;\n}\n\n//  Поиск ------------------\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US`\n    )\n    .then(result => result.data);\n  return response;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReview } from 'Servises/fetchMovies';\n\n\nconst Reviews = () => {\n  const [review, setReview] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReview(movieId)\n      .then(({ results }) =>\n        results.map(result => ({\n          author: result.author,\n          content: result.content,\n          id: result.id,\n        }))\n      )\n      .then(oneReview => setReview(oneReview));\n  }, [movieId]);\n  console.log(fetchMovieReview(movieId));\n\n  if (!review) {\n    return null;\n  }\n\n  return (\n    <div>\n      {review.length > 0 ? (\n        <div>\n          {review.map(({ author, content, id }) => (\n            <div key={id}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div>Sorry, no review :( </div>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API","BASE_URL","fetchMovies","axios","then","result","data","results","response","fetchMovieById","movieId","fetchMovieCast","fetchMovieReview","fetchMovieByQuery","query","useState","review","setReview","useParams","useEffect","map","author","content","id","oneReview","console","log","length"],"sourceRoot":""}